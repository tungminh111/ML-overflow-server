version: "2"

services:
  redis:
    container_name: redis_container
    image: redis:alpine
    networks: 
      - mynetwork
    ports:
      - 6379:6379
  postgres: 
    container_name: postgres_container
    image: postgres
    environment: 
      POSTGRES_USER: ${PGUSER}
      POSTGRES_DB: ${PGDATABASE}
      POSTGRES_PASSWORD: ${PGPASSWORD}
    restart: unless-stopped 
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - 5432:5432
    networks: 
      - mynetwork
  backend:
    container_name: backend_container
    build:
      context: ./
    restart: always
    networks: 
      - mynetwork
    ports:
      - 8080:8080
      
    volumes:
      - type: bind
        source: ./
        target: /app

      - /app/node_modules
      
    depends_on:
      postgres: 
        condition: service_healthy

networks:
  mynetwork:
    driver: bridge